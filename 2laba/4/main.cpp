/*
Дан двусвязный линейный список и указатель первый элемент этого 
списка. Все элементы списка хранят различные между собой значения. Необходимо 
вывести значения элементов списка, которые находятся между наименьшим и 
наибольшим элементами списка, в том порядке, в каком они находятся в исходном 
списке. Использовать процедуры. 

Все динамические структуры данных реализовывать через классы. Не использовать STL.  
Для каждой динамической структуры должен быть предусмотрен
стандартный набор методов - добавления/удаления/вывода элементов. 
Во всех задачах обязательно наличие дружественного интерфейса. Ввод данных с клавиатуры.
*/

#include "doubly_linked_list.h"
#include <iostream>

int main() {
    DoublyLinkedList list;

    std::cout << "Введите количество элементов: ";
    int count;
    std::cin >> count;

    if (count <= 0) {
        std::cerr << "Некорректное количество элементов!" << std::endl;
        return 1;
    }

    std::cout << "Введите элементы:" << std::endl;
    for (int i = 0; i < count; ++i) {
        int value;
        if (!(std::cin >> value)) {
            std::cerr << "Ошибка ввода!" << std::endl;
            return 1;
        }
        list.Append(value);
    }

    std::cout << "Список: ";
    list.Print();
    list.PrintBetweenMinMax();

    return 0;
}
